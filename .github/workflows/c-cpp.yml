name: C/C++ CI

on:
  push:
    branches:
        - master
        - '*'
  pull_request:
    branches: [ master ]

env:
  # Force timezone to central european or unit tests checking DST/standard time switches will fail (those switches do not occur at the same time in all timezones).
  TZ: CET
jobs:
  CI-build:

    runs-on: ubuntu-latest

    strategy:
        matrix:
            gcc-version: [6, 8, 9]
            install-libcurl: [true, false] 
            install-libesmtp: [true, false] 
            install-liblog4cpp: [true, false] 
            install-liblua: [true, false] 
            install-libmariadb: [true, false] 
            install-libjsoncpp: [true, false] 

    env:
        CC: gcc-${{ matrix.gcc-version }}
        CXX: g++-${{ matrix.gcc-version }}

    steps:
    - uses: actions/checkout@v2
    - name: install required dependencies
      run: sudo apt install g++-${{ matrix.gcc-version }} libcppunit-dev gettext
      
      # libcurl
    - name: install libcurl
      if: matrix.install-libcurl
      run: sudo apt install libcurl4-openssl-dev
    - name: uninstall libcurl
      if: ${{! matrix.install-libcurl }}
      run: sudo apt remove libcurl4-openssl-dev

      # libesmtp
    - name: install libesmtp
      if: matrix.install-libesmtp
      run: sudo apt install libesmtp-dev
    - name: uninstall libesmtp 
      if: ${{! matrix.install-libesmtp }}
      run: sudo apt remove libesmtp-dev

      # liblog4cpp
    - name: install liblog4cpp
      if: matrix.install-liblog4cpp
      run: sudo apt install liblog4cpp5-dev
    - name: uninstall liblog4cpp
      if: ${{! matrix.install-liblog4cpp5-dev }}
      run: sudo apt remove liblog4cpp5-dev

      # liblua
    - name: install liblua
      if: matrix.install-liblua
      run: sudo apt install liblua5.1-0-dev
    - name: uninstall liblua
      if: ${{! matrix.install-liblua }}
      run: sudo apt remove liblua5.1-0-dev

      # libmariadb
    - name: install libmariadb
      if: matrix.install-libmariadb
      run: sudo apt install libmariadb-dev
    - name: uninstall libmariadb
      if: ${{! matrix.install-libmariadb }}
      run: sudo apt remove libmariadb-dev

      # libjsoncpp
    - name: install libjsoncpp
      if: matrix.install-libjsoncpp
      run: sudo apt install libjsoncpp-dev
    - name: uninstall libjsoncpp
      if: ${{! matrix.install-libjsoncpp }}
      run: sudo apt remove libjsoncpp-dev

    - name: get pthsem
      run: wget https://github.com/linknx/pthsem/archive/master.zip
    - name: extract pthsem
      run: unzip master.zip
    - name: build pthsem
      working-directory: pthsem-master
      run: ./configure && make && sudo make install
    - name: update libraries registry
      run: sudo ldconfig
    - name: prepare build system
      run: autoreconf --install
    - name: configure
      if: ${{! matrix.full-options }}
      run: ./configure --without-log4cpp --without-libcurl --without-lua --disable-smtp --without-mysql
    - name: configure
      if: matrix.full-options
      run: ./configure --with-log4cpp --with-libcurl --with-lua --enable-smtp --with-mysql
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: sudo make install
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test-suite.log
        path: test/test-suite.log
